class Solution {
    public int[] sortArray(int[] nums) {
        // Queue<Integer>pq=new PriorityQueue<>();
        // for(int x:nums)pq.offer(x);
        // int idx=0;
        // while(!pq.isEmpty())nums[idx++]=pq.poll();
        // return nums;
        
        Map<Integer,Integer>map=new HashMap<>();
        for(int i=0;i<nums.length;i++)map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        int min=Integer.MAX_VALUE,max=Integer.MIN_VALUE;
        for(int x:nums){
            min=Math.min(x,min);
            max=Math.max(x,max);
        }
        int idx=0;
        for(int i=min;i<=max;i++){
            if(map.containsKey(i)){
                int val=map.get(i);
                while(val>0){
                    nums[idx++]=i;
                    val--;
                }
            }
        }
        return nums;
    }
}
/* Count Sort:--
    Step 1: At first put the all values and their frequencies in a map
    Step 2: Afterthat,find the maximum and minimum element from the given array
    Step 3: Then iterate a loop from min element to max element and check if exist in the map then put it in the resultant array
    */
